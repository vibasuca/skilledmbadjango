{"version":3,"sources":["headroom.js","jQuery.headroom.js"],"names":["root","factory","define","amd","exports","module","Headroom","this","features","bind","classList","document","documentElement","rAF","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","Debouncer","callback","ticking","extend","object","arguments","length","Error","key","obj","result","i","replacement","nodeType","elem","options","lastKnownScrollY","tolerance","t","Object","down","up","classes","offset","scroller","initialised","onPin","onUnpin","onTop","onNotTop","onBottom","onNotBottom","prototype","constructor","update","requestTick","rafCallback","handleEvent","init","cutsTheMustard","debouncer","add","initial","setTimeout","attachEvent","destroy","remove","unpinned","pinned","top","notTop","removeEventListener","getScrollY","addEventListener","unpin","contains","call","pin","bottom","notBottom","undefined","pageYOffset","scrollTop","body","parentNode","getViewportHeight","innerHeight","clientHeight","getElementPhysicalHeight","elm","Math","max","offsetHeight","getScrollerPhysicalHeight","getDocumentHeight","scrollHeight","getElementHeight","getScrollerHeight","isOutOfBounds","currentScrollY","pastTop","pastBottom","toleranceExceeded","direction","abs","shouldUnpin","scrollingDown","pastOffset","shouldPin","scrollingUp","scrollDirection","$","fn","headroom","option","each","$this","data","removeData","Zepto","jQuery"],"mappings":"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","file":"../../headroom.min.js","sourcesContent":["/*!\n * headroom.js v0.9.3 - Give your page some headroom. Hide your header until you need it\n * Copyright (c) 2016 Nick Williams - http://wicky.nillia.ms/headroom.js\n * License: MIT\n */\n\n(function(root, factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  }\n  else if (typeof exports === 'object') {\n    // COMMONJS\n    module.exports = factory();\n  }\n  else {\n    // BROWSER\n    root.Headroom = factory();\n  }\n}(this, function() {\n  'use strict';\n\n  /* exported features */\n  \n  var features = {\n    bind : !!(function(){}.bind),\n    classList : 'classList' in document.documentElement,\n    rAF : !!(window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame)\n  };\n  window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n  \n  /**\n   * Handles debouncing of events via requestAnimationFrame\n   * @see http://www.html5rocks.com/en/tutorials/speed/animations/\n   * @param {Function} callback The callback to handle whichever event\n   */\n  function Debouncer (callback) {\n    this.callback = callback;\n    this.ticking = false;\n  }\n  Debouncer.prototype = {\n    constructor : Debouncer,\n  \n    /**\n     * dispatches the event to the supplied callback\n     * @private\n     */\n    update : function() {\n      this.callback && this.callback();\n      this.ticking = false;\n    },\n  \n    /**\n     * ensures events don't get stacked\n     * @private\n     */\n    requestTick : function() {\n      if(!this.ticking) {\n        requestAnimationFrame(this.rafCallback || (this.rafCallback = this.update.bind(this)));\n        this.ticking = true;\n      }\n    },\n  \n    /**\n     * Attach this as the event listeners\n     */\n    handleEvent : function() {\n      this.requestTick();\n    }\n  };\n  /**\n   * Check if object is part of the DOM\n   * @constructor\n   * @param {Object} obj element to check\n   */\n  function isDOMElement(obj) {\n    return obj && typeof window !== 'undefined' && (obj === window || obj.nodeType);\n  }\n  \n  /**\n   * Helper function for extending objects\n   */\n  function extend (object /*, objectN ... */) {\n    if(arguments.length <= 0) {\n      throw new Error('Missing arguments in extend function');\n    }\n  \n    var result = object || {},\n        key,\n        i;\n  \n    for (i = 1; i < arguments.length; i++) {\n      var replacement = arguments[i] || {};\n  \n      for (key in replacement) {\n        // Recurse into object except if the object is a DOM element\n        if(typeof result[key] === 'object' && ! isDOMElement(result[key])) {\n          result[key] = extend(result[key], replacement[key]);\n        }\n        else {\n          result[key] = result[key] || replacement[key];\n        }\n      }\n    }\n  \n    return result;\n  }\n  \n  /**\n   * Helper function for normalizing tolerance option to object format\n   */\n  function normalizeTolerance (t) {\n    return t === Object(t) ? t : { down : t, up : t };\n  }\n  \n  /**\n   * UI enhancement for fixed headers.\n   * Hides header when scrolling down\n   * Shows header when scrolling up\n   * @constructor\n   * @param {DOMElement} elem the header element\n   * @param {Object} options options for the widget\n   */\n  function Headroom (elem, options) {\n    options = extend(options, Headroom.options);\n  \n    this.lastKnownScrollY = 0;\n    this.elem             = elem;\n    this.tolerance        = normalizeTolerance(options.tolerance);\n    this.classes          = options.classes;\n    this.offset           = options.offset;\n    this.scroller         = options.scroller;\n    this.initialised      = false;\n    this.onPin            = options.onPin;\n    this.onUnpin          = options.onUnpin;\n    this.onTop            = options.onTop;\n    this.onNotTop         = options.onNotTop;\n    this.onBottom         = options.onBottom;\n    this.onNotBottom      = options.onNotBottom;\n  }\n  Headroom.prototype = {\n    constructor : Headroom,\n  \n    /**\n     * Initialises the widget\n     */\n    init : function() {\n      if(!Headroom.cutsTheMustard) {\n        return;\n      }\n  \n      this.debouncer = new Debouncer(this.update.bind(this));\n      this.elem.classList.add(this.classes.initial);\n  \n      // defer event registration to handle browser \n      // potentially restoring previous scroll position\n      setTimeout(this.attachEvent.bind(this), 100);\n  \n      return this;\n    },\n  \n    /**\n     * Unattaches events and removes any classes that were added\n     */\n    destroy : function() {\n      var classes = this.classes;\n  \n      this.initialised = false;\n      this.elem.classList.remove(classes.unpinned, classes.pinned, classes.top, classes.notTop, classes.initial);\n      this.scroller.removeEventListener('scroll', this.debouncer, false);\n    },\n  \n    /**\n     * Attaches the scroll event\n     * @private\n     */\n    attachEvent : function() {\n      if(!this.initialised){\n        this.lastKnownScrollY = this.getScrollY();\n        this.initialised = true;\n        this.scroller.addEventListener('scroll', this.debouncer, false);\n  \n        this.debouncer.handleEvent();\n      }\n    },\n    \n    /**\n     * Unpins the header if it's currently pinned\n     */\n    unpin : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n      \n      if(classList.contains(classes.pinned) || !classList.contains(classes.unpinned)) {\n        classList.add(classes.unpinned);\n        classList.remove(classes.pinned);\n        this.onUnpin && this.onUnpin.call(this);\n      }\n    },\n  \n    /**\n     * Pins the header if it's currently unpinned\n     */\n    pin : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n      \n      if(classList.contains(classes.unpinned)) {\n        classList.remove(classes.unpinned);\n        classList.add(classes.pinned);\n        this.onPin && this.onPin.call(this);\n      }\n    },\n  \n    /**\n     * Handles the top states\n     */\n    top : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n      \n      if(!classList.contains(classes.top)) {\n        classList.add(classes.top);\n        classList.remove(classes.notTop);\n        this.onTop && this.onTop.call(this);\n      }\n    },\n  \n    /**\n     * Handles the not top state\n     */\n    notTop : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n      \n      if(!classList.contains(classes.notTop)) {\n        classList.add(classes.notTop);\n        classList.remove(classes.top);\n        this.onNotTop && this.onNotTop.call(this);\n      }\n    },\n  \n    bottom : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n      \n      if(!classList.contains(classes.bottom)) {\n        classList.add(classes.bottom);\n        classList.remove(classes.notBottom);\n        this.onBottom && this.onBottom.call(this);\n      }\n    },\n  \n    /**\n     * Handles the not top state\n     */\n    notBottom : function() {\n      var classList = this.elem.classList,\n        classes = this.classes;\n      \n      if(!classList.contains(classes.notBottom)) {\n        classList.add(classes.notBottom);\n        classList.remove(classes.bottom);\n        this.onNotBottom && this.onNotBottom.call(this);\n      }\n    },\n  \n    /**\n     * Gets the Y scroll position\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY\n     * @return {Number} pixels the page has scrolled along the Y-axis\n     */\n    getScrollY : function() {\n      return (this.scroller.pageYOffset !== undefined)\n        ? this.scroller.pageYOffset\n        : (this.scroller.scrollTop !== undefined)\n          ? this.scroller.scrollTop\n          : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n    },\n  \n    /**\n     * Gets the height of the viewport\n     * @see http://andylangton.co.uk/blog/development/get-viewport-size-width-and-height-javascript\n     * @return {int} the height of the viewport in pixels\n     */\n    getViewportHeight : function () {\n      return window.innerHeight\n        || document.documentElement.clientHeight\n        || document.body.clientHeight;\n    },\n  \n    /**\n     * Gets the physical height of the DOM element\n     * @param  {Object}  elm the element to calculate the physical height of which\n     * @return {int}     the physical height of the element in pixels\n     */\n    getElementPhysicalHeight : function (elm) {\n      return Math.max(\n        elm.offsetHeight,\n        elm.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the physical height of the scroller element\n     * @return {int} the physical height of the scroller element in pixels\n     */\n    getScrollerPhysicalHeight : function () {\n      return (this.scroller === window || this.scroller === document.body)\n        ? this.getViewportHeight()\n        : this.getElementPhysicalHeight(this.scroller);\n    },\n  \n    /**\n     * Gets the height of the document\n     * @see http://james.padolsey.com/javascript/get-document-height-cross-browser/\n     * @return {int} the height of the document in pixels\n     */\n    getDocumentHeight : function () {\n      var body = document.body,\n        documentElement = document.documentElement;\n    \n      return Math.max(\n        body.scrollHeight, documentElement.scrollHeight,\n        body.offsetHeight, documentElement.offsetHeight,\n        body.clientHeight, documentElement.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the height of the DOM element\n     * @param  {Object}  elm the element to calculate the height of which\n     * @return {int}     the height of the element in pixels\n     */\n    getElementHeight : function (elm) {\n      return Math.max(\n        elm.scrollHeight,\n        elm.offsetHeight,\n        elm.clientHeight\n      );\n    },\n  \n    /**\n     * Gets the height of the scroller element\n     * @return {int} the height of the scroller element in pixels\n     */\n    getScrollerHeight : function () {\n      return (this.scroller === window || this.scroller === document.body)\n        ? this.getDocumentHeight()\n        : this.getElementHeight(this.scroller);\n    },\n  \n    /**\n     * determines if the scroll position is outside of document boundaries\n     * @param  {int}  currentScrollY the current y scroll position\n     * @return {bool} true if out of bounds, false otherwise\n     */\n    isOutOfBounds : function (currentScrollY) {\n      var pastTop  = currentScrollY < 0,\n        pastBottom = currentScrollY + this.getScrollerPhysicalHeight() > this.getScrollerHeight();\n      \n      return pastTop || pastBottom;\n    },\n  \n    /**\n     * determines if the tolerance has been exceeded\n     * @param  {int} currentScrollY the current scroll y position\n     * @return {bool} true if tolerance exceeded, false otherwise\n     */\n    toleranceExceeded : function (currentScrollY, direction) {\n      return Math.abs(currentScrollY-this.lastKnownScrollY) >= this.tolerance[direction];\n    },\n  \n    /**\n     * determine if it is appropriate to unpin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should unpin, false otherwise\n     */\n    shouldUnpin : function (currentScrollY, toleranceExceeded) {\n      var scrollingDown = currentScrollY > this.lastKnownScrollY,\n        pastOffset = currentScrollY >= this.offset;\n  \n      return scrollingDown && pastOffset && toleranceExceeded;\n    },\n  \n    /**\n     * determine if it is appropriate to pin\n     * @param  {int} currentScrollY the current y scroll position\n     * @param  {bool} toleranceExceeded has the tolerance been exceeded?\n     * @return {bool} true if should pin, false otherwise\n     */\n    shouldPin : function (currentScrollY, toleranceExceeded) {\n      var scrollingUp  = currentScrollY < this.lastKnownScrollY,\n        pastOffset = currentScrollY <= this.offset;\n  \n      return (scrollingUp && toleranceExceeded) || pastOffset;\n    },\n  \n    /**\n     * Handles updating the state of the widget\n     */\n    update : function() {\n      var currentScrollY  = this.getScrollY(),\n        scrollDirection = currentScrollY > this.lastKnownScrollY ? 'down' : 'up',\n        toleranceExceeded = this.toleranceExceeded(currentScrollY, scrollDirection);\n  \n      if(this.isOutOfBounds(currentScrollY)) { // Ignore bouncy scrolling in OSX\n        return;\n      }\n  \n      if (currentScrollY <= this.offset ) {\n        this.top();\n      } else {\n        this.notTop();\n      }\n  \n      if(currentScrollY + this.getViewportHeight() >= this.getScrollerHeight()) {\n        this.bottom();\n      }\n      else {\n        this.notBottom();\n      }\n  \n      if(this.shouldUnpin(currentScrollY, toleranceExceeded)) {\n        this.unpin();\n      }\n      else if(this.shouldPin(currentScrollY, toleranceExceeded)) {\n        this.pin();\n      }\n  \n      this.lastKnownScrollY = currentScrollY;\n    }\n  };\n  /**\n   * Default options\n   * @type {Object}\n   */\n  Headroom.options = {\n    tolerance : {\n      up : 0,\n      down : 0\n    },\n    offset : 0,\n    scroller: window,\n    classes : {\n      pinned : 'headroom--pinned',\n      unpinned : 'headroom--unpinned',\n      top : 'headroom--top',\n      notTop : 'headroom--not-top',\n      bottom : 'headroom--bottom',\n      notBottom : 'headroom--not-bottom',\n      initial : 'headroom'\n    }\n  };\n  Headroom.cutsTheMustard = typeof features !== 'undefined' && features.rAF && features.bind && features.classList;\n\n  return Headroom;\n}));","/*!\n * headroom.js v0.9.3 - Give your page some headroom. Hide your header until you need it\n * Copyright (c) 2016 Nick Williams - http://wicky.nillia.ms/headroom.js\n * License: MIT\n */\n\n(function($) {\n\n  if(!$) {\n    return;\n  }\n\n  ////////////\n  // Plugin //\n  ////////////\n\n  $.fn.headroom = function(option) {\n    return this.each(function() {\n      var $this   = $(this),\n        data      = $this.data('headroom'),\n        options   = typeof option === 'object' && option;\n\n      options = $.extend(true, {}, Headroom.options, options);\n\n      if (!data) {\n        data = new Headroom(this, options);\n        data.init();\n        $this.data('headroom', data);\n      }\n      if (typeof option === 'string') {\n        data[option]();\n\n        if(option === 'destroy'){\n          $this.removeData('headroom');\n        }\n      }\n    });\n  };\n\n  //////////////\n  // Data API //\n  //////////////\n\n  $('[data-headroom]').each(function() {\n    var $this = $(this);\n    $this.headroom($this.data());\n  });\n\n}(window.Zepto || window.jQuery));"]}