# Generated by Django 4.2.3 on 2023-08-01 11:11

import courses.models
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('media_library', '0003_alter_media_options_alter_media_user'),
        ('courses', '0002_alter_course_attachments_alter_course_category_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField(blank=True)),
                ('time_limit', models.DurationField(default=datetime.timedelta(0), validators=[courses.models.validate_max_duration, courses.models.validate_min_duration])),
                ('time_limit_unit', models.CharField(choices=[('W', 'Weeks'), ('D', 'Days'), ('H', 'Hours')], default='W', max_length=1)),
                ('total_points', models.PositiveIntegerField(default=10)),
                ('min_pass_points', models.PositiveIntegerField(default=5)),
                ('max_file_uploads', models.PositiveIntegerField(default=1, help_text='Define the number of files that a student can upload in this assignment. Input 0 to disable the option to upload.')),
                ('file_size_limit', models.PositiveIntegerField(default=2, help_text='Define maximum file size attachment in MB')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attachments', models.ManyToManyField(blank=True, related_name='attachments_for_assignments', to='media_library.media')),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField(blank=True)),
                ('enable_preview', models.BooleanField(default=False, help_text='If checked, any users/guest can view this lesson without enroll course')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attachments', models.ManyToManyField(blank=True, related_name='attachments_for_lessons', to='media_library.media')),
                ('feature_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feature_image_for_topics', to='media_library.media')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField(blank=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('sort_order',),
            },
        ),
        migrations.AlterField(
            model_name='course',
            name='duration',
            field=models.DurationField(default=datetime.timedelta(0), validators=[courses.models.validate_max_duration, courses.models.validate_min_duration]),
        ),
        migrations.CreateModel(
            name='TopicItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('assignment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topic_item', to='courses.assignment')),
                ('lesson', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topic_item', to='courses.lesson')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='courses.topic')),
            ],
            options={
                'ordering': ('sort_order',),
            },
        ),
        migrations.AddField(
            model_name='topic',
            name='course',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='courses.course'),
        ),
    ]
