# Generated by Django 4.2.3 on 2023-07-31 11:57

import courses.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('media_library', '0003_alter_media_options_alter_media_user'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='CourseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='courses.coursecategory')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('max_students', models.PositiveIntegerField(default=0, help_text='Number of students that can enrol in this course. Set 0 for no limits.')),
                ('difficulty_level', models.CharField(choices=[('A', 'All Levels'), ('B', 'Beginner'), ('I', 'Intermediate'), ('E', 'Expert')], default='A', max_length=1)),
                ('is_public', models.BooleanField(default=False, help_text='Make This Course Public. No enrollment required.')),
                ('enable_qa', models.BooleanField(default=False, help_text='Enable Q&A section for your course')),
                ('language', models.CharField(choices=[('E', 'English'), ('F', 'French'), ('G', 'German'), ('I', 'Italian'), ('J', 'Japanese'), ('K', 'Korean'), ('R', 'Russian'), ('S', 'Spanish')], default='E', max_length=1)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('what_will_i_learn', models.TextField(blank=True, help_text='Write here the course benefits (One per line)')),
                ('target_audience', models.TextField(blank=True, help_text='Specify the target audience that will benefit the most from the course. (One line per target audience.)')),
                ('duration', models.DurationField(default=datetime.timedelta(seconds=3600), validators=[courses.models.validate_max_duration, courses.models.validate_min_duration])),
                ('materials_included', models.TextField(blank=True, help_text='A list of assets you will be providing for the students in this course (One per line)')),
                ('requirements', models.TextField(blank=True, help_text='Additional requirements or special instructions for the students (One per line)')),
                ('is_draft', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('attachments', models.ManyToManyField(related_name='attachments_for_courses', to='media_library.media')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='courses.coursecategory')),
                ('instructors', models.ManyToManyField(related_name='courses_as_instructor', to=settings.AUTH_USER_MODEL)),
                ('prerequisite_courses', models.ManyToManyField(related_name='prerequisite_for_courses', to='courses.course')),
                ('tags', models.ManyToManyField(related_name='courses', to='courses.coursetag')),
                ('thumbnail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thumbnail_for_courses', to='media_library.media')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-updated_at',),
            },
        ),
    ]
